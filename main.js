(()=>{"use strict";const e={events:{},subscribe(e,t){console.log(`PUBSUB: someone just subscribed to know about ${e}`),this.events[e]=this.events[e]||[],this.events[e].push(t)},unsubscribe(e,t){console.log(`PUBSUB: someone just UNsubscribed from ${e}`),this.events[e]&&(this.events[e]=this.events[e].filter((e=>e!==t)))},publish(e,t){console.log(`PUBSUB: Making an broadcast about ${e} with ${t}`),this.events[e]&&this.events[e].forEach((e=>{e(t)}))}};const t={getFormData(e){const t=new FormData(e.target);return Object.fromEntries(t)}};e.subscribe("citySearch",(async t=>{let n=await function(){let e="82dbf781a95c7b01a16d7fdaaf1b552c",t=async(e,t)=>{try{console.log("API Fetcher has fired");const n=await fetch(`${e}${t}`);return await n.json()}catch(e){return console.log(e),"ERROR"}};return{cityWeather:async n=>{const s=await(async n=>(console.log("GEO Fetcher has fired"),t(`https://api.openweathermap.org/geo/1.0/direct?q=${n}&appid=`,e)))(n),a={lat:s[0].lat,lon:s[0].lon},o=await(async n=>(console.log("Weather Fetcher has fired"),t(`https://api.openweathermap.org/data/2.5/weather?lat=${n.lat}&&lon=${n.lon}&appid=`,e)))(a);return console.log(o),o}}}().cityWeather(t);e.publish("cityDataReturned",n)})),function(){let n=document.getElementById("city"),s=document.getElementById("temp"),a=document.getElementById("wind");document.getElementById("form").addEventListener("submit",(n=>{n.preventDefault();let s=t.getFormData(n);e.publish("citySearch",s.citySearch)})),e.subscribe("cityDataReturned",(({name:e,weather:t,main:o,wind:r})=>{n.innerText=e,s.innerText=o.temp/10,a.innerText=r.speed}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQU8sTUFBTUEsRUFBUyxDQUNwQkMsT0FBUSxDQUFDLEVBQ1RDLFVBQVVDLEVBQVFDLEdBQ2hCQyxRQUFRQyxJQUFJLGlEQUFpREgsS0FFN0RJLEtBQUtOLE9BQU9FLEdBQVVJLEtBQUtOLE9BQU9FLElBQVcsR0FDN0NJLEtBQUtOLE9BQU9FLEdBQVFLLEtBQUtKLEVBQzNCLEVBQ0FLLFlBQVlOLEVBQVFDLEdBQ2xCQyxRQUFRQyxJQUFJLDBDQUEwQ0gsS0FFbERJLEtBQUtOLE9BQU9FLEtBQ2RJLEtBQUtOLE9BQU9FLEdBQVVJLEtBQUtOLE9BQU9FLEdBQVFPLFFBQVFDLEdBQU1BLElBQU1QLElBRWxFLEVBQ0FRLFFBQVFULEVBQVFVLEdBQ2RSLFFBQVFDLElBQUkscUNBQXFDSCxVQUFlVSxLQUU1RE4sS0FBS04sT0FBT0UsSUFDZEksS0FBS04sT0FBT0UsR0FBUVcsU0FBU0gsSUFDM0JBLEVBQUVFLEVBQUssR0FHYixHQ3BCRixNQUFNRSxFQUFPLENBQ1hDLFlBQVlDLEdBQ1YsTUFBTUMsRUFBVyxJQUFJQyxTQUFTRixFQUFNRyxRQUVwQyxPQURrQkMsT0FBT0MsWUFBWUosRUFFdkMsR0FTQWxCLEVBQU9FLFVBQVUsY0FMQXFCLE1BQU9DLElBQ3RCLElBQUlYLFFDWEQsV0FFTCxJQUFJWSxFQUFTLG1DQUVUQyxFQUFhSCxNQUFPSSxFQUFNQyxLQUM1QixJQUNFdkIsUUFBUUMsSUFBSSx5QkFDWixNQUFNdUIsUUFBZ0JDLE1BQU0sR0FBR0gsSUFBT0MsS0FFdEMsYUFEbUJDLEVBQVFFLE1BSzdCLENBSEUsTUFBT0MsR0FFUCxPQURBM0IsUUFBUUMsSUFBSTBCLEdBQ0wsT0FDVCxHQXVCRixNQUFPLENBQUVDLFlBUlNWLE1BQU9XLElBQ3ZCLE1BQU1DLE9BYlNaLE9BQU9XLElBQ3RCN0IsUUFBUUMsSUFBSSx5QkFFTG9CLEVBRE0sbURBQW1EUSxXQUN0Q1QsSUFVSFcsQ0FBV0YsR0FDNUJHLEVBQVksQ0FBRUMsSUFBS0gsRUFBUyxHQUFHRyxJQUFLQyxJQUFLSixFQUFTLEdBQUdJLEtBQ3JEQyxPQVRhakIsT0FBT2tCLElBQzFCcEMsUUFBUUMsSUFBSSw2QkFFTG9CLEVBRFUsdURBQXVEZSxFQUFNSCxZQUFZRyxFQUFNRixhQUNsRWQsSUFNSmlCLENBQWVMLEdBRXpDLE9BREFoQyxRQUFRQyxJQUFJa0MsR0FDTEEsQ0FBVyxFQUl0QixDRDFCcUJHLEdBQWdCVixZQUFZVCxHQUM3Q3hCLEVBQU9ZLFFBQVEsbUJBQW9CQyxFQUFLLElBTWhDLFdBQ1YsSUFBSStCLEVBQVNDLFNBQVNDLGVBQWUsUUFDakNDLEVBQVNGLFNBQVNDLGVBQWUsUUFDakNFLEVBQVNILFNBQVNDLGVBQWUsUUFFMUJELFNBQVNDLGVBQWUsUUFFOUJHLGlCQUFpQixVQUFXQyxJQUMvQkEsRUFBRUMsaUJBQ0YsSUFBSXRDLEVBQU9FLEVBQUtDLFlBQVlrQyxHQUM1QmxELEVBQU9ZLFFBQVEsYUFBY0MsRUFBS3VDLFdBQVcsSUFVL0NwRCxFQUFPRSxVQUFVLG9CQVBBLEVBQUdtRCxPQUFNQyxVQUFTQyxPQUFNQyxXQUV2Q1osRUFBT2EsVUFBWUosRUFDbkJOLEVBQU9VLFVBQVlGLEVBQUtHLEtBQU8sR0FDL0JWLEVBQU9TLFVBQVlELEVBQUtHLEtBQUssR0FJaEMsQ0FyQlcsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYXRoZXJhcHAvLi9zcmMvanMvcHVic3ViLmpzIiwid2VicGFjazovL3dlYXRoZXJhcHAvLi9zcmMvanMvYXBwLmpzIiwid2VicGFjazovL3dlYXRoZXJhcHAvLi9zcmMvanMvYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwdWJzdWIgPSB7XG4gIGV2ZW50czoge30sXG4gIHN1YnNjcmliZShldk5hbWUsIGZuKSB7XG4gICAgY29uc29sZS5sb2coYFBVQlNVQjogc29tZW9uZSBqdXN0IHN1YnNjcmliZWQgdG8ga25vdyBhYm91dCAke2V2TmFtZX1gKTtcbiAgICAvLyBhZGQgYW4gZXZlbnQgd2l0aCBhIG5hbWUgYXMgbmV3IG9yIHRvIGV4aXN0aW5nIGxpc3RcbiAgICB0aGlzLmV2ZW50c1tldk5hbWVdID0gdGhpcy5ldmVudHNbZXZOYW1lXSB8fCBbXTtcbiAgICB0aGlzLmV2ZW50c1tldk5hbWVdLnB1c2goZm4pO1xuICB9LFxuICB1bnN1YnNjcmliZShldk5hbWUsIGZuKSB7XG4gICAgY29uc29sZS5sb2coYFBVQlNVQjogc29tZW9uZSBqdXN0IFVOc3Vic2NyaWJlZCBmcm9tICR7ZXZOYW1lfWApO1xuICAgIC8vIHJlbW92ZSBhbiBldmVudCBmdW5jdGlvbiBieSBuYW1lXG4gICAgaWYgKHRoaXMuZXZlbnRzW2V2TmFtZV0pIHtcbiAgICAgIHRoaXMuZXZlbnRzW2V2TmFtZV0gPSB0aGlzLmV2ZW50c1tldk5hbWVdLmZpbHRlcigoZikgPT4gZiAhPT0gZm4pO1xuICAgIH1cbiAgfSxcbiAgcHVibGlzaChldk5hbWUsIGRhdGEpIHtcbiAgICBjb25zb2xlLmxvZyhgUFVCU1VCOiBNYWtpbmcgYW4gYnJvYWRjYXN0IGFib3V0ICR7ZXZOYW1lfSB3aXRoICR7ZGF0YX1gKTtcbiAgICAvLyBlbWl0fHB1Ymxpc2h8YW5ub3VuY2UgdGhlIGV2ZW50IHRvIGFueW9uZSB3aG8gaXMgc3Vic2NyaWJlZFxuICAgIGlmICh0aGlzLmV2ZW50c1tldk5hbWVdKSB7XG4gICAgICB0aGlzLmV2ZW50c1tldk5hbWVdLmZvckVhY2goKGYpID0+IHtcbiAgICAgICAgZihkYXRhKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcbn07XG4iLCJpbXBvcnQgeyBwdWJzdWIgfSBmcm9tIFwiLi9wdWJzdWIuanNcIjtcbmltcG9ydCB7IGFwaUNvbnRyb2xsZXIgfSBmcm9tIFwiLi9hcGlcIjtcblxuY29uc3QgbGlicyA9IHtcbiAgZ2V0Rm9ybURhdGEoZXZlbnQpIHtcbiAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShldmVudC50YXJnZXQpO1xuICAgIGNvbnN0IGZvcm1Qcm9wcyA9IE9iamVjdC5mcm9tRW50cmllcyhmb3JtRGF0YSk7XG4gICAgcmV0dXJuIGZvcm1Qcm9wcztcbiAgfSxcbn07XG5cbmNvbnN0IGFwcCA9IChmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IHF1ZXJ5QXBpID0gYXN5bmMgKHF1ZXJ5KSA9PiB7XG4gICAgbGV0IGRhdGEgPSBhd2FpdCBhcGlDb250cm9sbGVyKCkuY2l0eVdlYXRoZXIocXVlcnkpO1xuICAgIHB1YnN1Yi5wdWJsaXNoKFwiY2l0eURhdGFSZXR1cm5lZFwiLCBkYXRhKTtcbiAgfTtcblxuICBwdWJzdWIuc3Vic2NyaWJlKFwiY2l0eVNlYXJjaFwiLCBxdWVyeUFwaSk7XG59KSgpO1xuXG5jb25zdCBkb20gPSAoZnVuY3Rpb24gKCkge1xuICBsZXQgY2l0eUVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaXR5XCIpO1xuICBsZXQgdGVtcEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZW1wXCIpO1xuICBsZXQgd2luZEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3aW5kXCIpO1xuXG4gIGxldCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb3JtXCIpO1xuXG4gIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBsZXQgZGF0YSA9IGxpYnMuZ2V0Rm9ybURhdGEoZSk7XG4gICAgcHVic3ViLnB1Ymxpc2goXCJjaXR5U2VhcmNoXCIsIGRhdGEuY2l0eVNlYXJjaCk7XG4gIH0pO1xuXG4gIGxldCByZW5kZXJDYXJkID0gKHsgbmFtZSwgd2VhdGhlciwgbWFpbiwgd2luZCB9KSA9PiB7XG5cbiAgICBjaXR5RWwuaW5uZXJUZXh0ID0gbmFtZTtcbiAgICB0ZW1wRWwuaW5uZXJUZXh0ID0gbWFpbi50ZW1wIC8gMTA7XG4gICAgd2luZEVsLmlubmVyVGV4dCA9IHdpbmQuc3BlZWQ7XG4gIH07XG5cbiAgcHVic3ViLnN1YnNjcmliZShcImNpdHlEYXRhUmV0dXJuZWRcIiwgcmVuZGVyQ2FyZCk7XG59KSgpO1xuIiwiXG5cbmV4cG9ydCBmdW5jdGlvbiBhcGlDb250cm9sbGVyKCkge1xuICAvL0xpbmtzIGFuZCBrZXlcbiAgbGV0IGFwaUtleSA9IFwiODJkYmY3ODFhOTVjN2IwMWExNmQ3ZmRhYWYxYjU1MmNcIjtcblxuICBsZXQgYXBpRmV0Y2hlciA9IGFzeW5jIChsaW5rLCBrZXkpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coXCJBUEkgRmV0Y2hlciBoYXMgZmlyZWRcIik7XG4gICAgICBjb25zdCBwcm9taXNlID0gYXdhaXQgZmV0Y2goYCR7bGlua30ke2tleX1gKTtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBwcm9taXNlLmpzb24oKTtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICByZXR1cm4gXCJFUlJPUlwiO1xuICAgIH1cbiAgfTtcblxuICBsZXQgZ2VvRmV0Y2hlciA9IGFzeW5jIChjaXR5KSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJHRU8gRmV0Y2hlciBoYXMgZmlyZWRcIik7XG4gICAgbGV0IGdlb0FwaSA9IGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZ2VvLzEuMC9kaXJlY3Q/cT0ke2NpdHl9JmFwcGlkPWA7XG4gICAgcmV0dXJuIGFwaUZldGNoZXIoZ2VvQXBpLCBhcGlLZXkpO1xuICB9O1xuXG4gIGxldCB3ZWF0aGVyRmV0Y2hlciA9IGFzeW5jIChjb3JkcykgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiV2VhdGhlciBGZXRjaGVyIGhhcyBmaXJlZFwiKTtcbiAgICBsZXQgd2VhdGhlckFwaSA9IGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9sYXQ9JHtjb3Jkcy5sYXR9JiZsb249JHtjb3Jkcy5sb259JmFwcGlkPWA7XG4gICAgcmV0dXJuIGFwaUZldGNoZXIod2VhdGhlckFwaSwgYXBpS2V5KTtcbiAgfTtcblxuICBsZXQgY2l0eVdlYXRoZXIgPSBhc3luYyAoY2l0eSkgPT4ge1xuICAgIGNvbnN0IGNpdHlEYXRhID0gYXdhaXQgZ2VvRmV0Y2hlcihjaXR5KTtcbiAgICBjb25zdCBjaXR5Q29yZHMgPSB7IGxhdDogY2l0eURhdGFbMF0ubGF0LCBsb246IGNpdHlEYXRhWzBdLmxvbiB9O1xuICAgIGNvbnN0IHdlYXRoZXJEYXRhID0gYXdhaXQgd2VhdGhlckZldGNoZXIoY2l0eUNvcmRzKTtcbiAgICBjb25zb2xlLmxvZyh3ZWF0aGVyRGF0YSk7XG4gICAgcmV0dXJuIHdlYXRoZXJEYXRhO1xuICB9O1xuXG4gIHJldHVybiB7IGNpdHlXZWF0aGVyIH07XG59XG4iXSwibmFtZXMiOlsicHVic3ViIiwiZXZlbnRzIiwic3Vic2NyaWJlIiwiZXZOYW1lIiwiZm4iLCJjb25zb2xlIiwibG9nIiwidGhpcyIsInB1c2giLCJ1bnN1YnNjcmliZSIsImZpbHRlciIsImYiLCJwdWJsaXNoIiwiZGF0YSIsImZvckVhY2giLCJsaWJzIiwiZ2V0Rm9ybURhdGEiLCJldmVudCIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJ0YXJnZXQiLCJPYmplY3QiLCJmcm9tRW50cmllcyIsImFzeW5jIiwicXVlcnkiLCJhcGlLZXkiLCJhcGlGZXRjaGVyIiwibGluayIsImtleSIsInByb21pc2UiLCJmZXRjaCIsImpzb24iLCJlcnJvciIsImNpdHlXZWF0aGVyIiwiY2l0eSIsImNpdHlEYXRhIiwiZ2VvRmV0Y2hlciIsImNpdHlDb3JkcyIsImxhdCIsImxvbiIsIndlYXRoZXJEYXRhIiwiY29yZHMiLCJ3ZWF0aGVyRmV0Y2hlciIsImFwaUNvbnRyb2xsZXIiLCJjaXR5RWwiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwidGVtcEVsIiwid2luZEVsIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImNpdHlTZWFyY2giLCJuYW1lIiwid2VhdGhlciIsIm1haW4iLCJ3aW5kIiwiaW5uZXJUZXh0IiwidGVtcCIsInNwZWVkIl0sInNvdXJjZVJvb3QiOiIifQ==